 #include<bits/stdc++.h>
// #define in int
 using namespace std;

void dfs(int currentvertex, vector<int>&storingvector,vector<int> adj[],vector<int> &visited)
{
//using of & in visited and storingvector is must because we want to remember the previous value in memory
	if(visited[currentvertex]==0){
		visited[currentvertex]=1;
	storingvector.push_back(currentvertex);
    
}

/*
visited:| 0, 0 , 0 ,0 ,0 ,0 , 0, 0 ,0|
          1 ,1 , 1 ,1 ,1 ,1 , 1 , 1, 1

*/

for (auto nextvertex:adj[currentvertex])
{	// 7->8,9
if(visited[nextvertex]==0)
{
dfs(nextvertex,storingvector,adj,visited);
}
}
}

 int main()
{
int vertex,edges;
cin>>vertex>>edges;

vector<int> adj[vertex+1];

for(int i =1;i<edges+1;i++)
{
	int vertex1,vertex2;
cin>>vertex1>>vertex2;
adj[vertex1].push_back(vertex2);
adj[vertex2].push_back(vertex1);

}

vector<int> visited(vertex+1,0);
vector<int>storingvector;
for(int i =1;i<vertex+1;i++)
{
	if(!visited[i])
	{
		dfs(i,storingvector,adj,visited);
	}
}

for(int i=0;i<storingvector.size();i++){
	cout<<storingvector[i]<<" ";
}
//152346789
return 0;
 }
